{"version":3,"file":"static/js/771.199d1ac5.chunk.js","mappings":"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","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","pages/MovieDetails/MovieDetails.styled.jsx","components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetails/MovieDetails.jsx","servises/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoaderWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`","import { Hourglass } from \"react-loader-spinner\";\nimport { LoaderWrap } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <LoaderWrap>\n            <Hourglass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"hourglass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  colors={['#306cce', '#72a1ed']}\n/>\n        </LoaderWrap>\n        \n    )\n}","import styled from \"styled-components\";\n\n\nexport const Container = styled.div`\n    padding: 20px 40px;\n`;\n\nexport const ButtonBack = styled.button`\ndisplay: flex;\nalign-items: center;\njustify-content: center;\nfont-size: 14px;\nwidth: 100px;\nheight: 30px;\nborder: none;\noutline: none;\ncolor: #fff;\nbackground: #111;\ncursor: pointer;\nposition: relative;\nz-index: 0;\nborder-radius: 10px;\n\n&::before {\n    content: '';\n    background: linear-gradient(45deg, #ff0000, #ff7300, #fffb00, #48ff00, #00ffd5, #002bff, #7a00ff, #ff00c8, #ff0000);\n    position: absolute;\n    top: -2px;\n    left:-2px;\n    background-size: 400%;\n    z-index: -1;\n    filter: blur(5px);\n    width: calc(100% + 4px);\n    height: calc(100% + 4px);\n    animation: glowing 20s linear infinite;\n    opacity: 0;\n    transition: opacity .3s ease-in-out;\n    border-radius: 10px;\n}\n\n&:active{\n    color: #000;\n}\n\n&:active::after {\n background: transparent;\n}\n\n&:hover::before {\n    opacity: 1;\n}\n\n&::after {\n      z-index: -1;\n    content: '';\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    background: #111;\n    left: 0;\n    top: 0;\n    border-radius: 10px;  \n}\n\n@keyframes glowing {\n        0% { background-position: 0 0; }\n    50% { background-position: 400% 0; }\n    100% { background-position: 0 0; }\n}\n`","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const MovieCardContainer = styled.div`\n    display: flex;\n    gap: 40px;\n    margin-top: 20px;\n`;\n\nexport const Img = styled.img`\n    height: 600px;\n    width: 400px;\n`;\n\nexport const MovieInfo = styled.div`\n    padding-top: 20px;\n    max-width: 1100px;\n`;\n\nexport const MovieName = styled.h2`\n    margin-bottom: 20px;\n`;\n\nexport const MovieInfoText = styled.p`\n    &:not(:last-child) {\n        margin-bottom: 20px;\n    }\n`;\n\nexport const MovieInfoTextBold = styled.span`\n    display: block;\n    margin-bottom: 20px;\n    font-size: 18px;\n    font-weight: 500;\n`;\n\nexport const MoreInfowrapper = styled.div`\n    margin-top: 20px;\n    padding-top: 20px;\n    padding-bottom: 20px;\n    border-top: 1px solid #d3d3d3;\n    border-bottom: 1px solid #d3d3d3;\n`;\n\nexport const MoreInfoHeader = styled.h3`\n    font-size: 25px;\n    font-weight: 500;\n`\n\nexport const List = styled.ul`\n    margin-top: 20px;\n    display: flex;\n    gap: 20px;\n    font-size: 18px;\n`;\n\nexport const ListItem = styled.li`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport const StyledLink = styled(Link)`\n    font-size: 16px;\n    margin-right: 5px;\n    padding: 5px 15px;\n    border: 1px solid #0d57aa;\n    border-radius: 6px;\n    background-color: #b5d1f2;\n    box-shadow: 0px 0px 5px rgba(0, 0, 0, 0.2);\n    transition: all 200ms ease-in-out;\n    text-decoration: none;\n    color: #0d57aa;\n\n    &:hover,\n    &:focus {\n        background-color: #0d57aa;\n        color: #ffffff;\n        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.3);\n    }\n`;","import { Loader } from \"components/Loader/Loader\";\nimport { useLocation } from \"react-router-dom\";\nimport { MovieCardContainer, Img, MovieInfo, MovieName, MovieInfoText, MovieInfoTextBold, MoreInfowrapper, MoreInfoHeader, List, ListItem, StyledLink } from \"./MovieCard.styled\";\nimport PropTypes from 'prop-types';\n\nconst MovieCard = ({ movie }) => {\n    const { title, release_date, poster_path, vote_average, overview, genres } = movie;\n    const location = useLocation();\n    const releaseDate = new Date(release_date);\n\n    const releaseYear = isNaN(releaseDate)\n        ? 'Unknown'\n        : releaseDate.getFullYear();\n    \n    const posterUrl = poster_path\n        ? `https://image.tmdb.org/t/p/w300${poster_path}`\n        : 'https://upload.wikimedia.org/wikipedia/commons/b/ba/No_image_available_400_x_600.svg';\n    \n    const userScore = vote_average\n        ? `${(vote_average * 10).toFixed(0)}%`\n        : 'Not rated yet';\n    \n    if (!title) {\n        return <Loader />\n    }\n\n    return (\n        <>\n            <MovieCardContainer>\n                <Img src={posterUrl} alt={`${title} poster`} />\n\n                <MovieInfo>\n                    <MovieName>\n                        {title ?? 'Unknown'} ({releaseYear})\n                    </MovieName>\n                    <MovieInfoText>User Score: {userScore}</MovieInfoText>\n                    <MovieInfoText>\n                        <MovieInfoTextBold>Overview:</MovieInfoTextBold>\n                        {overview}\n                    </MovieInfoText>\n\n                    {genres && genres.length > 0 && (\n                        <MovieInfoText>\n                            <MovieInfoTextBold>Genres:</MovieInfoTextBold>\n                            {genres.map(genre => genre.name).join(', ')}\n                        </MovieInfoText>\n                    )}\n                </MovieInfo>\n            </MovieCardContainer>\n\n            <MoreInfowrapper>\n                <MoreInfoHeader>Additional information</MoreInfoHeader>\n\n                <List>\n                    <ListItem>\n                        <StyledLink\n                            to=\"cast\"\n                            state={{ from: location?.state?.from ?? '/' }}\n                        >\n                            Cast\n                        </StyledLink>\n                    </ListItem>\n\n                    <ListItem>\n                        <StyledLink\n                            to=\"reviews\"\n                            state={{ from: location?.state?.from ?? '/' }}\n                        >\n                            Reviews\n                        </StyledLink>\n                    </ListItem>\n                </List>\n            </MoreInfowrapper>\n        </>\n    );\n};\n\nMovieCard.propTypes = {\n    movie: PropTypes.shape({\n        title: PropTypes.string.isRequired,\n        release_date: PropTypes.string.isRequired,\n        poster_path: PropTypes.string.isRequired,\n        vote_average: PropTypes.number,\n        overview: PropTypes.string,\n        genres: PropTypes.arrayOf(\n            PropTypes.shape({name: PropTypes.string.isRequired})\n        ),\n    }).isRequired,\n}\n\n\nexport default MovieCard;","import { Suspense, useEffect, useState } from \"react\";\nimport { Outlet, useLocation, useParams, Link } from \"react-router-dom\";\nimport { fetchMovieById } from \"servises/api\";\nimport { ButtonBack, Container } from \"./MovieDetails.styled\";\nimport { AiOutlineArrowLeft } from \"react-icons/ai\";\nimport MovieCard from \"components/MovieCard/MovieCard\";\nimport { Loader } from \"components/Loader/Loader\";\n\n\nconst MovieDetails = () => {\n    const { movieId } = useParams();\n    const location = useLocation();\n    const [selectedMovie, setSelectedMovie] = useState({});\n\n    useEffect(() => {\n        const fetchSelectedMovie = async movieId => {\n            try {\n                const movieData = await fetchMovieById(movieId);\n                setSelectedMovie(movieData);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        fetchSelectedMovie(movieId)\n    }, [movieId]);\n\n    return (\n        <main>\n            <Container>\n                <Link to={location?.state?.from ?? '/'}>\n                    <ButtonBack type=\"button\">\n                        <AiOutlineArrowLeft\n                            style={{ width: '25px', height: '25px', display: 'inline-block' }} />\n                        Go back\n                    </ButtonBack>\n                </Link>\n\n                <MovieCard movie={selectedMovie} />\n\n                <Suspense fallback={<Loader />}>\n                    <Outlet />\n                </Suspense>\n            </Container>\n        </main>\n    );\n};\n\n\nexport default MovieDetails;","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '9e06172264fd25342d03ac1357f3ae3c';\n\nexport const fetchTrendMovies = async () => {\n    const { data } = await axios.get(`${baseURL}/3/trending/movie/day?api_key=${API_KEY}`);\n\n    return data;\n};\n\nexport const fetchMovieByName = async query => {\n    const { data } = await axios.get(\n        `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    return data;\n};\n\nexport const fetchMovieById = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n};\n\n\nexport const fetchMovieCast = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n\n    return data;\n};"],"names":["LoaderWrap","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Container","ButtonBack","MovieCardContainer","Img","MovieInfo","MovieName","MovieInfoText","MovieInfoTextBold","MoreInfowrapper","MoreInfoHeader","List","ListItem","StyledLink","Link","movie","title","release_date","poster_path","vote_average","overview","genres","location","useLocation","releaseDate","Date","releaseYear","isNaN","getFullYear","posterUrl","userScore","toFixed","src","alt","length","map","genre","name","join","to","state","from","movieId","useParams","useState","selectedMovie","setSelectedMovie","useEffect","fetchSelectedMovie","fetchMovieById","movieData","console","log","type","style","display","Suspense","fallback","baseURL","API_KEY","fetchTrendMovies","axios","data","fetchMovieByName","query","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}