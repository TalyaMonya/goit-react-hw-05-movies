{"version":3,"file":"static/js/891.75ccc39e.chunk.js","mappings":"gMAEaA,E,QAAaC,GAAAA,IAAH,wH,SCCVC,EAAS,WAClB,OACI,SAACF,EAAD,WACI,SAAC,KAAD,CACVG,SAAS,EACTC,OAAO,KACPC,MAAM,KACNC,UAAU,oBACVC,aAAc,CAAC,EACfC,aAAa,GACbC,OAAQ,CAAC,UAAW,cAKrB,C,mMCdYC,EAAUT,EAAAA,GAAAA,QAAH,2EAKPU,EAAeV,EAAAA,GAAAA,GAAH,uKASZW,EAAOX,EAAAA,GAAAA,GAAH,oEAKJY,EAAWZ,EAAAA,GAAAA,GAAH,sFAMRa,GAAab,EAAAA,EAAAA,IAAOc,EAAAA,GAAPd,CAAH,wP,kICRvB,EAlBkB,SAAC,GAAwB,IAAtBe,EAAqB,EAArBA,eACjB,OACI,UAAC,KAAD,YACI,SAAC,KAAD,UAAc,oBAEd,SAAC,KAAD,UACKA,EAAeC,KAAI,SAAAC,GAAa,OAC7B,SAAC,KAAD,WACI,SAAC,KAAD,CAAYC,GAAE,kBAAaD,EAAcE,IAAzC,SACKF,EAAcG,SAFRH,EAAcE,GADA,QAUhD,E,8BCwBD,EArCa,WACT,OAA4CE,EAAAA,EAAAA,UAAS,IAArD,eAAON,EAAP,KAAuBO,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAmBA,OAjBAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAmB,mCAAG,sGAEpBF,GAAS,GACTF,GAAa,GAHO,UAIMK,EAAAA,EAAAA,MAJN,gBAIZC,EAJY,EAIZA,QACRR,EAAkBQ,GALE,kDAOpBJ,GAAS,GAPW,yBASpBF,GAAa,GATO,6EAAH,qDAazBI,GACH,GAAE,KAGC,8BACKL,GACG,SAACtB,EAAA,EAAD,IACAwB,GACA,uBAAG,2EAIH,SAAC,EAAD,CAAWV,eAAgBA,KAI1C,C,mMCvCKgB,EAAU,6BACVC,EAAU,mCAEHH,EAAgB,mCAAG,sGACLI,EAAAA,EAAAA,IAAA,UAAaF,EAAb,yCAAqDC,IADhD,uBACpBE,EADoB,EACpBA,KADoB,kBAGrBA,GAHqB,2CAAH,qDAMhBC,EAAgB,mCAAG,WAAMC,GAAN,yFACLH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,mCACkBC,EADlB,iCACkDI,EADlD,gCADK,uBACpBF,EADoB,EACpBA,KADoB,kBAKrBA,GALqB,2CAAH,sDAQhBG,EAAc,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAChBF,EADgB,oBACGO,EADH,oBACsBN,EADtB,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDASdK,EAAc,mCAAG,WAAMD,GAAN,yFACHL,EAAAA,EAAAA,IAAA,UAChBF,EADgB,oBACGO,EADH,4BAC8BN,EAD9B,oBADG,uBAClBE,EADkB,EAClBA,KADkB,kBAKnBA,GALmB,2CAAH,sDAQdM,EAAiB,mCAAG,WAAMF,GAAN,yFACNL,EAAAA,EAAAA,IAAA,UAChBF,EADgB,oBACGO,EADH,4BAC8BN,EAD9B,2BADM,uBACrBE,EADqB,EACrBA,KADqB,kBAKtBA,GALsB,2CAAH,qD","sources":["components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx","servises/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const LoaderWrap = styled.div`\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n`","import { Hourglass } from \"react-loader-spinner\";\nimport { LoaderWrap } from \"./Loader.styled\";\n\nexport const Loader = () => {\n    return (\n        <LoaderWrap>\n            <Hourglass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"hourglass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"\"\n  colors={['#306cce', '#72a1ed']}\n/>\n        </LoaderWrap>\n        \n    )\n}","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\n\nexport const Section = styled.section`\n    padding-right: 50px;\n    padding-left: 50px;\n`;\n\nexport const SectionTitle = styled.h2`\n    margin-top: 30px;\n    margin-bottom: 30px;\n    padding-left: 5px;\n    font-size: 30px;\n    font-weight: 600;\n    text-align: center;\n`;\n\nexport const List = styled.ul`\n    list-style: disc;\n    color: #0d57aa;\n`;\n\nexport const ListItem = styled.li`\n    &:not(:last-child) {\n        margin-bottom: 8px;\n    }\n`;\n\nexport const StyledLink = styled(Link)`\n    font-style: 20px;\n    color: #0d57aa;\n    transition: color 200ms ease-in-out, border-bottom 200ms ease-in-out;\n\n    &:hover,\n    &:focus {\n        color: #1c85ff;\n        border-bottom: 2px solid #1c85ff;\n    }\n`","import PropTypes from 'prop-types';\nimport { List, ListItem, Section, SectionTitle, StyledLink } from './MovieList.styled';\n\nconst MovieList = ({ trendingMovies }) => {\n    return (\n        <Section>\n            <SectionTitle>Trending today</SectionTitle>\n\n            <List>\n                {trendingMovies.map(trendingMovie => (\n                    <ListItem key={trendingMovie.id}>\n                        <StyledLink to={`/movies/${trendingMovie.id}`}>\n                            {trendingMovie.title}\n                        </StyledLink>\n                    </ListItem>\n                ))}\n            </List>\n        </Section>\n    )\n};\n\nexport default MovieList;\n\n\nMovieList.propTypes = {\n    trendingMovies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n            release_date: PropTypes.string.isRequired,\n            overview: PropTypes.string.isRequired,\n            poster_path: PropTypes.string,\n            vote_average: PropTypes.number.isRequired,\n        })\n    ).isRequired,\n};","import MovieList from \"components/MovieList/MovieList\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { useEffect, useState } from \"react\";\nimport { fetchTrendMovies } from \"servises/api\";\n\n\nconst Home = () => {\n    const [trendingMovies, setTrendingMovies] = useState([]);\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(false);\n\n    useEffect(() => {\n        const fetchTrendingMovies = async () => {\n            try {\n                setError(false);\n                setIsLoading(true);\n                const { results } = await fetchTrendMovies();\n                setTrendingMovies(results);\n            } catch (error) {\n                setError(true);\n            } finally {\n                setIsLoading(false);\n            }\n        };\n\n        fetchTrendingMovies();\n    }, []);\n\n    return (\n        <>\n            {isLoading ? (\n                <Loader />\n            ) : error ? (\n                <p>\n                    Sorry, we could not find the trending movies. Pleasw try again later.\n                </p>\n            ) : (\n                <MovieList trendingMovies={trendingMovies}/>\n            )}\n        </>\n    )\n};\n\nexport default Home;","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = '9e06172264fd25342d03ac1357f3ae3c';\n\nexport const fetchTrendMovies = async () => {\n    const { data } = await axios.get(`${baseURL}/3/trending/movie/day?api_key=${API_KEY}`);\n\n    return data;\n};\n\nexport const fetchMovieByName = async query => {\n    const { data } = await axios.get(\n        `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    return data;\n};\n\nexport const fetchMovieById = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n};\n\n\nexport const fetchMovieCast = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n\n    return data;\n};"],"names":["LoaderWrap","styled","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","Section","SectionTitle","List","ListItem","StyledLink","Link","trendingMovies","map","trendingMovie","to","id","title","useState","setTrendingMovies","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","fetchTrendMovies","results","baseURL","API_KEY","axios","data","fetchMovieByName","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews"],"sourceRoot":""}